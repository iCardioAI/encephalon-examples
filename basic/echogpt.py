import os
import httpx
from typing import Dict, Any, List


def get_echogpt_responses() -> List[Dict[str, Any]]:
    """
    Retrieve natural language AI responses generated by EchoGPT.
    
    EchoGPT is Encephalon's conversational AI that provides clinical interpretations
    and explanations in natural language. These responses complement the structured
    analysis data with human-readable insights.
    
    Returns:
        List of EchoGPT response objects with scan associations
    
    Example:
        # Get all AI-generated clinical interpretations
        responses = get_echogpt_responses()
        print(f"Found {len(responses)} EchoGPT interpretations")
        
        for response in responses:
            print(f"\nScan: {response['scan']}")
            if response['response']:
                print(f"Clinical interpretation: {response['response']}")
            print(f"Generated: {response['created_at']}")
    """
    api_url = os.getenv("API")
    token = os.getenv("API_TOKEN")
    
    headers = {
        "Authorization": f"Bearer {token}",
        "Content-Type": "application/json"
    }
    
    response = httpx.get(
        f"{api_url}/api/v2/echogpt/report/",
        headers=headers
    )
    response.raise_for_status()
    return response.json()


def get_echogpt_response(uuid: str) -> Dict[str, Any]:
    """
    Retrieve a specific EchoGPT natural language interpretation.
    
    Use this function to get detailed AI-generated clinical explanations
    for a specific analysis. EchoGPT responses help translate technical
    measurements into clinical insights.
    
    Args:
        uuid: The unique identifier of the EchoGPT response
    
    Returns:
        Dict containing the AI-generated clinical interpretation and metadata
    
    Example:
        # Get specific AI interpretation
        response = get_echogpt_response("abc123-def456-789")
        print(f"Associated scan: {response['scan']}")
        print(f"Clinical insights: {response['response']}")
        print(f"Generated on: {response['created_at']}")
        
        # Use AI response in clinical workflow
        clinical_summary = response['response']
        scan_uuid = response['scan']
        
        # Combine with structured data for complete analysis
        print(f"\nAI Summary for scan {scan_uuid}:")
        print(clinical_summary)
    """
    api_url = os.getenv("API")
    token = os.getenv("API_TOKEN")
    
    headers = {
        "Authorization": f"Bearer {token}",
        "Content-Type": "application/json"
    }
    
    response = httpx.get(
        f"{api_url}/api/v2/echogpt/report/{uuid}/",
        headers=headers
    )
    response.raise_for_status()
    return response.json()